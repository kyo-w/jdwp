package jdwp

// TypeComponent
// TypeComponent与Type的区别在于：
//
//	Type是Java数据类型
//	TypeComponent是类似于反射此类，在Java生态中存在的"组件类型"
//
// /**
type TypeComponent interface {
	Mirror
	GetUniqueID() ObjectID
	GetName() string
	GetSignature() string
	GetGenericSignature() string

	// GetDeclaringType TypeComponent也存在类型，比如java.lang.String中的value字段(Field)的类型就是[]byte类型
	GetDeclaringType() ReferenceType
	IsStatic() bool
	IsFinal() bool
	// IsSynthetic Determines if this TypeComponent is synthetic. Synthetic members are generated by the compiler and are not present in the source code for the containing class.
	//Not all target VMs support this query. See VirtualMachine.canGetSyntheticAttribute to determine if the operation is supported.
	IsSynthetic() bool
	GetModifiers() int
	IsPrivate() bool
	IsPackagePrivate() bool
	IsProtected() bool
	IsPublic() bool
}

// Field Java反射中的字段/*
type Field interface {
	TypeComponent
	GetTypeName() string
	// GetType 这里获取字段对象的类型 error : ClassNotLoadedException
	GetType() Type
	IsTransient() bool
	IsVolatile() bool
	IsEnumConstant() bool
}

type Locatable interface {
	GetLocation() Location
}

type Method interface {
	Locatable
	TypeComponent
	GetReturnTypeName() string
	// GetReturnType 返回方法返回值类型 ClassNotLoadedException
	GetReturnType() Type
	// GetArgumentTypeNames 返回方法的参数
	GetArgumentTypeNames() []string
	// GetArgumentTypes 返回方法参数的类型
	GetArgumentTypes() []Type
	IsAbstract() bool
	// IsDefault 方法是否为默认方法
	IsDefault() bool
	// IsSynchronized 方法是否为同步(Synchronized)
	IsSynchronized() bool
	// IsNative 方法是否为native
	IsNative() bool
	// IsVarArgs 方法是否接口可变参数
	IsVarArgs() bool
	// IsBridge 是否为桥接方法
	IsBridge() bool
	// IsConstructor 是否为构造函数
	IsConstructor() bool
	// IsStaticInitializer 是否为静态初始化方法
	IsStaticInitializer() bool
	// IsObsolete 方法是否被标记为过时方法
	IsObsolete() bool
	// GetAllLineLocation 返回方法所有的行号
	GetAllLineLocation() []Location
	// GetLocationsOfLine AbsentInformationException – if there is no line number information for this method.
	GetLocationsOfLine(lineNumber int) []Location
	// GetLocationOfCodeIndex codeIndex代指字节码的方法区
	GetLocationOfCodeIndex(codeIndex int64) Location
	// GetVariables Throws:
	//AbsentInformationException – if there is no variable information for this method. Generally,
	//local variable information is not available for native or abstract methods (that is, their argument name information is not available), thus they will throw this exception.
	GetVariables() []LocalVariable
	// GetVariablesByName 通过字符匹配获取相应的LocalVariable
	GetVariablesByName(string) []LocalVariable
	// GetArguments 获取方法所有的LocalVariable
	GetArguments() []LocalVariable
}
